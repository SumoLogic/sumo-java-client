buildscript {
    repositories {
        mavenCentral()
    }
    ext.scalatestVersion = '3.2.14'
}

plugins {
    id 'java'
    id 'maven-publish'
    id 'signing'
    id 'scala'
    id "com.github.maiflai.scalatest" version "0.32"
}

repositories {
    mavenCentral()
}

dependencies {
    implementation 'org.apache.httpcomponents:httpclient:4.5.13'
    implementation 'com.fasterxml.jackson.core:jackson-core:2.13.2'
    implementation 'com.fasterxml.jackson.core:jackson-databind:2.14.1'
    implementation 'com.opencsv:opencsv:5.6'
    implementation 'commons-cli:commons-cli:1.5.0'

    testImplementation "org.scala-lang:scala3-compiler_3:3.2.0"
    testImplementation "org.scalatest:scalatest_3:$scalatestVersion"
    testImplementation "org.scalatest:scalatest-wordspec_3:$scalatestVersion"
    testImplementation "org.scalatest:scalatest-shouldmatchers_3:$scalatestVersion"
    // Needed for scalatest as mentioned in https://github.com/scalatest/scalatest/issues/1736
    testRuntimeOnly("com.vladsch.flexmark:flexmark-all:0.62.2")
}

group = 'com.sumologic.api.client'
version = '2.11-SNAPSHOT'
description = 'Sumo Logic Java Client Library'
java.sourceCompatibility = JavaVersion.VERSION_1_8

tasks.withType(JavaCompile) {
    options.encoding = 'UTF-8'
}

ext.gitCommitIdAbbrev = System.getenv('GIT_COMMIT_ID_ABBREV') ?: 'git rev-parse --verify --short=12 HEAD'.execute().text.trim()

task sourcesJar(type: Jar, dependsOn: classes) {
    archiveClassifier.set('sources')
    from(sourceSets.main.allJava) {
        expand(project: [version: project.version], git: [commit: [id: [abbrev: gitCommitIdAbbrev]]])
    }
}

task javadocJar(type: Jar) {
    from javadoc
    archiveClassifier.set('javadoc')
}

publishing {
    publications {
        maven(MavenPublication) {
            groupId(project.group)
            artifactId(project.name)
            version(project.version)

            pom {
                name = project.name
                description = project.description
                url = 'https://github.com/SumoLogic/sumo-java-client'

                licenses {
                    license {
                        name = 'Apache License, Version 2.0'
                        url = 'http://www.apache.org/licenses/LICENSE-2.0.txt'
                    }
                }
                developers {
                    developer {
                        id = 'jacek'
                        name = 'Jacek Migdal'
                        organization = 'Sumo Logic'
                    }
                    developer {
                        id = 'goledzki'
                        name = 'Greg Oledzki'
                        organization = 'Sumo Logic'
                    }
                }
                scm {
                    connection = 'scm:git:git@github.com:SumoLogic/sumo-java-client.git'
                    developerConnection = 'scm:git:git@github.com:SumoLogic/sumo-java-client.git'
                    url = 'https://github.com/SumoLogic/sumo-java-client'
                    tag = 'HEAD'
                }
            }

            from(components.java)
            artifact(sourcesJar)
            artifact(javadocJar)
        }
    }
    repositories {
        maven {
            url 'https://oss.sonatype.org/service/local/staging/deploy/maven2/'
            credentials {
                username project.findProperty("nexus_username") ?: ""
                password project.findProperty("nexus_password") ?: ""
            }
        }
    }
}

signing {
    useGpgCmd()
    sign publishing.publications.maven
}
